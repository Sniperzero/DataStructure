========================================================================
    控制台应用程序：StudyForDataStructure 项目概述
========================================================================

应用程序向导已为您创建了此 StudyForDataStructure 应用程序。

本文件概要介绍组成 StudyForDataStructure 应用程序的每个文件的内容。


StudyForDataStructure.vcxproj
    这是使用应用程序向导生成的 VC++ 项目的主项目文件，其中包含生成该文件的 Visual C++ 的版本信息，以及有关使用应用程序向导选择的平台、配置和项目功能的信息。

StudyForDataStructure.vcxproj.filters
    这是使用“应用程序向导”生成的 VC++ 项目筛选器文件。它包含有关项目文件与筛选器之间的关联信息。在 IDE 中，通过这种关联，在特定节点下以分组形式显示具有相似扩展名的文件。例如，“.cpp”文件与“源文件”筛选器关联。

StudyForDataStructure.cpp
    这是主应用程序源文件。

/////////////////////////////////////////////////////////////////////////////
其他标准文件:

StdAfx.h, StdAfx.cpp
    这些文件用于生成名为 StudyForDataStructure.pch 的预编译头 (PCH) 文件和名为 StdAfx.obj 的预编译类型文件。

/////////////////////////////////////////////////////////////////////////////
其他注释:

应用程序向导使用“TODO:”注释来指示应添加或自定义的源代码部分。

/////////////////////////////////////////////////////////////////////////////

如何在Vs中使用GitHub？
{https://blog.csdn.net/xiaozi0221/article/details/80135004
	1 在工具-扩展和更新中搜索GitHub 会搜索到一个插件，安装，重启后可用
	2 login GitHub 
	3 创建 Github项目
	4 更改 指的是在本地仓库中，将自己的更改 提交于git git会自动记录进行了什么操作 
	5 commit 同步，将本地仓库同步于网络，即GitHub
}

本项目是学习数据结构的一个项目，首先实现的是顺序线性表

【
为了解决顺序存储不足：用线性表另外一种结构-链式存储。在顺序存储结构(数组描述)中，元素的地址是由数学公式决定的，而在链式储存结构中，元素的地址是随机分布的，每个元素都有一个明确的指针指向线性表的下一个元素的位置（即地址）。
线性表的链式存储结构的特点是用一组任意的存储单元存储线性表的数据元素，这组存储单元可以是连续的，也可以是不连续的。在顺序结构中，每个数据元素只需要存数据元素信息就行了，而在链式结构中，除了存储数据元素信息外，还要存储它的后继元素的存储地址。所以一般结点包括两个信息：数据和指针。链表就是n个节点组成的，如果每个结点只包含一个指针，那么就是单链表。
有头有尾：我们把链表中第一个结点的存储位置叫作头指针，那么整个链表的存取就必须是从头指针开始进行的。而线性链表的最后一个结点指针为空（NULL）。从图一中可以看到，结点都是由两部分组成，数据域和指针域。
】